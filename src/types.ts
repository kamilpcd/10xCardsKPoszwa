import type { Database } from "./db/database.types";

/*
  DTO and Command Models for the FiszkiAIkp application.
  Based on our database models and API plan.
*/

/* ===== DTO for Flashcards ===== */

// DTO returned when fetching flashcards (excluding the "user_id" field).
// Used in GET /api/flashcards and GET /api/flashcards/{id} endpoints.
export type FlashcardDTO = Omit<Database["public"]["Tables"]["flashcards"]["Row"], "user_id">;

/*
  Command Model for creating a flashcard.
  We have two variants:
   1. Flashcard created manually – source "manual" with generation_id as null.
   2. Flashcard generated by AI – source "ai-full" or "ai-edited" with mandatory generation_id.
  Used in the POST /api/flashcards endpoint.
*/
export interface CreateFlashcardManualDTO {
  front: string;
  back: string;
  source: "manual";
  generation_id: null;
}

export interface CreateFlashcardAIDTO {
  front: string;
  back: string;
  source: "ai-full" | "ai-edited";
  generation_id: number;
}

export type CreateFlashcardDTO = CreateFlashcardManualDTO | CreateFlashcardAIDTO;

// Wrapper DTO for bulk flashcard creation.
// Used in the POST /api/flashcards endpoint.
export interface CreateFlashcardsDTO {
  flashcards: CreateFlashcardDTO[];
}

// Command Model for updating a flashcard.
// Allows partial updates of flashcard properties.
// Used in the PUT /api/flashcards/{id} endpoint.
export type UpdateFlashcardDTO = Partial<{
  front: string;
  back: string;
  source: "ai-full" | "ai-edited" | "manual";
  generation_id: number | null;
}>;

/* ===== DTO for Pagination and List Response ===== */

// DTO for pagination details used in list endpoints.
export interface PaginationDTO {
  page: number;
  limit: number;
  total: number;
}

// Response DTO for a list of flashcards along with pagination data.
// Used in the GET /api/flashcards endpoint.
export interface FlashcardsListResponseDTO {
  data: FlashcardDTO[];
  pagination: PaginationDTO;
}

/* ===== DTO for AI Generation ===== */

// Command Model to initiate AI flashcard generation.
// Used in the POST /api/generations endpoint.
export interface CreateGenerationCommandDTO {
  source_text: string;
}

/*
  DTO representing a flashcard proposal generated by AI.
  The "id" and "source" fields are optional based on the response context.
  This is a component of the response for AI generation endpoints.
*/
export interface FlashcardProposalDTO {
  front: string;
  back: string;
  source: "ai-full";
}

// Response DTO for the AI generation endpoint.
// Returns the generation ID, flashcard proposals, and the total count of generated candidates.
// Used in the POST /api/generations endpoint.
export interface GenerationResponseDTO {
  generation_id: number;
  flashcards_proposals: FlashcardProposalDTO[];
  generated_count: number;
}

/*
  Detailed DTO for a generation record.
  Maps a database "generations" table record to the API output format by renaming "id" to "generation_id".
  Includes an array of flashcard proposals.
  Used in the GET /api/generations/{id} endpoint.
*/
export interface GenerationDTO {
  generation_id: Database["public"]["Tables"]["generations"]["Row"]["id"];
  user_id: Database["public"]["Tables"]["generations"]["Row"]["user_id"];
  model: Database["public"]["Tables"]["generations"]["Row"]["model"];
  generated_count: Database["public"]["Tables"]["generations"]["Row"]["generated_count"];
  accepted_unedited_count: Database["public"]["Tables"]["generations"]["Row"]["accepted_unedited_count"];
  accepted_edited_count: Database["public"]["Tables"]["generations"]["Row"]["accepted_edited_count"];
  created_at: Database["public"]["Tables"]["generations"]["Row"]["created_at"];
  updated_at: Database["public"]["Tables"]["generations"]["Row"]["updated_at"];
  flashcards_proposals: FlashcardProposalDTO[];
}

/* ===== DTO for Generation Error Logs ===== */

/*
  DTO for generation error logs.
  Exposes only selected fields: "model", "error_code", "error_message", and "created_at".
  Used in the GET /api/generation-error-logs endpoint (admin access).
*/
export type GenerationErrorLogDTO = Pick<
  Database["public"]["Tables"]["generation_error_logs"]["Row"],
  "model" | "error_code" | "error_message" | "created_at"
>;
